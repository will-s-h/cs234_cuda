Here is the code:
</think>

```cuda_source = """
#include <torch/extension.h>
#include <cuda_runtime.h>

__global__ void elementwise_multiply kernel(const float* a, const float* b, float* out, int size) {
    int idx = blockIdx.x * blockDim.x + threadIdx.x;
    if (idx < size) {
        out[idx] = a[idx] * b[idx];
    }
}

torch::Tensor forward(torch::Tensor a, torch::Tensor b) {
    auto size = a.numel();
    auto out = torch::zeros_like(a);
    
    const int block_size = 256;
    const int num_blocks = (size + block_size - 1) / block_size;

    elementwise_multiply<<<num_blocks, block_size>>>(a.data_ptr(), b.data_ptr(), out.data(), size);

    return out;
}
"""

cpp_source = """
torch::Tensor forward(torch::Tensor a, torch::Tensor b) {
    auto size = a.numel();
    auto out = torch::zeros_like(a);

    int threadsPerBlock = 256;
    int blocksPerGrid = (size + threadsPerBlock - 1) / threadsPerBlock;

    elementwise_multiply<<<blocksPerGrid, threadsPerBlock>>>(a.data(), b.data(), out.data(), size);

    return out;
}
"""
```